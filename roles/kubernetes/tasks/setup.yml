---
- name: Install required packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gpg
    state: present
    update_cache: yes

# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#swap-configuration
- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Remove swap from fstab
  lineinfile:
    path: /etc/fstab
    regexp: '^[^#].*swap.*'
    state: absent

- name: Ensure containerd is running
  systemd:
    name: containerd
    state: started
    enabled: yes

- name: Create containerd configuration directory
  file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: Generate containerd configuration with CRI enabled
  shell: containerd config default > /etc/containerd/config.toml
  notify: restart containerd

- name: Force handler to run now
  meta: flush_handlers
  
- name: Configure containerd to use systemd cgroup driver
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^\s*SystemdCgroup = false'
    line: '            SystemdCgroup = true'
    backrefs: yes

- name: Load br_netfilter kernel module
  modprobe:
    name: br_netfilter
    state: present

- name: Make br_netfilter module persistent
  lineinfile:
    path: /etc/modules-load.d/k8s.conf
    line: br_netfilter
    create: yes

# Without this, iptables rules (used for Services, NetworkPolicies) won't apply to pod-to-pod traffic
- name: Set required sysctl parameters
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  loop:
    - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }
    - { name: 'net.ipv4.ip_forward', value: '1' }

- name: Add Kubernetes apt repository key
  apt_key:
    url: https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/Release.key
    state: present

- name: Add Kubernetes apt repository
  apt_repository:
    repo: "deb https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/ /"
    state: present

- name: Install kubeadm, kubelet, and kubectl
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: yes

# The "hold" prevents accidental upgrades of Kubernetes packages, which is crucial for cluster stability:
- name: Hold Kubernetes packages
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Enable kubelet service
  systemd:
    name: kubelet
    enabled: yes
